/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maininterface;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

import mainconnect.ConnectToDatabase;
import utilities.TableUtilities;
/**
 *
 * @author admin
 */
public class ViewRecords extends javax.swing.JPanel {

    private ArrayList<String> arrayPatientId = new ArrayList<>();
    private DefaultListModel listModel = new DefaultListModel();
    
    private static final String DEFAULT_QUERY = "Select patientid,lastname,firstname,initial "
            + "from patientinformation order by lastname";
    private static final String DEFAULT_QUERY_TABLE = "Select recordid,date,description,amount from patientrecords "
            + "where patientid=";
    private static final int NUMBER_OF_TABLECOLUMNS = 4;
    
    final static AddRecords windowAddRecords = new AddRecords();
    
    public ViewRecords() {
        initComponents();
        listOfPatients.setModel(listModel);
    }
    
    public void initiateList(int rep, String searchText) {
        //CONNECTION PARAMETERS 
        ConnectToDatabase connectDatabase = new ConnectToDatabase();
        connectDatabase.connect();
        Connection connection = connectDatabase.getConnection();
        Statement statementQuery = null;      
        
        //CLEAR ALL INVOLVE IN THE LIST
        listModel.clear();
        arrayPatientId.clear();
        
        try {
            statementQuery = connection.createStatement();
            ResultSet resultSet;
            try {
                resultSet = statementQuery.executeQuery(DEFAULT_QUERY);
                String temporaryName = "";
                while(resultSet.next()) {
                    temporaryName = resultSet.getString("lastname") + ", " + resultSet.getString("firstname") + " " + resultSet.getString("initial");
                    listModel.addElement(temporaryName);
                    arrayPatientId.add(resultSet.getString("patientid"));
                }
            }
            catch(Exception e) {
}
        }
        catch(Exception e) {
        
        }
        finally {
            connectDatabase.disconnect();
            try { 
                statementQuery.close();
            }
            catch(Exception e) {
                
            }
        }
    }
    
    public void addRecords() {
        String stringPatientName = "";
        try {
            stringPatientName = (String) listOfPatients.getSelectedValue();
        }
        catch(Exception e) {
            
        }
        //CHECK IF PATIENTNAME IS EMPTY
        if(stringPatientName.equals("")) {
            
        }
        else {
            windowAddRecords.resetWindow();
            windowAddRecords.setStringPatientName(stringPatientName);
            windowAddRecords.setStringPatiendId(arrayPatientId.get(listOfPatients.getSelectedIndex()));
            windowAddRecords.setVisible(true);
            windowAddRecords.setLocationRelativeTo(null);
            windowAddRecords.setResizable(false);
            windowAddRecords.setTitle("Add Records - Information");
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        textSearch = new javax.swing.JTextField();
        buttonSearch = new javax.swing.JButton();
        buttonShowAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfPatients = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRecords = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        buttonSearch.setText("Search");

        buttonShowAll.setText("Show All");
        buttonShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(buttonShowAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSearch))
            .addComponent(textSearch)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonShowAll)
                    .addComponent(buttonSearch)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient"));

        listOfPatients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOfPatientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listOfPatients);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        tableRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATE", "DESCRIPTION", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableRecords);
        tableRecords.getColumnModel().getColumn(0).setPreferredWidth(10);
        tableRecords.getColumnModel().getColumn(2).setPreferredWidth(300);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listOfPatientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOfPatientsMouseClicked
        try {
            TableUtilities getTableInformation = new TableUtilities();
            String stringPatientId = arrayPatientId.get(listOfPatients.getSelectedIndex());
            String DEF_QUERY = DEFAULT_QUERY_TABLE +"'"+stringPatientId+"' order by date desc";
            System.out.println(DEF_QUERY);
            getTableInformation.getList(0, "", tableRecords, NUMBER_OF_TABLECOLUMNS, DEF_QUERY, DEF_QUERY);
        }
        catch(Exception e) {
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_listOfPatientsMouseClicked

    private void buttonShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowAllActionPerformed

        this.initiateList(0, "");
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonShowAllActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonShowAll;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList listOfPatients;
    private javax.swing.JTable tableRecords;
    private javax.swing.JTextField textSearch;
    // End of variables declaration//GEN-END:variables
}
